(async() => {
  // ... start node with --inspect-brk flag first ...
  const cri = require('chrome-remote-interface');
  // ... connect to it using cri ...
  const connection = await cri({port: 9229});
  // ... get runtime domain ...
  let ({Runtime} = connection);
  // ... start node process ...
  await Runtime.runIfWaitingForDebugger();
  // ... get process.title ...
  await Runtime.evaluate({expression: 'process.title'});
  // ... get array ...
  const {result:{objectId}} = await Runtime.evaluate({expression: 'process.execArgv'});
  // ... stringify object using callFunctionOn and objectId ...
  await Runtime.callFunctionOn({functionDeclaration: 'function() { return JSON.stringify(this); }', objectId});
  // ... use returnByValue argument ..
  await Runtime.evaluate({expression: 'process.execArgv', returnByValue: true});
  // ... release object ...
  await Runtime.releaseObject({objectId});

  // ... add callback on each Runtime.consoleAPICalled ...
  Runtime.consoleAPICalled(console.log);
  // ... enable Runtime domain to get events ...
  await Runtime.enable();

  // ... run console.log from Node repl and check that logs are here ...

  // ... kill process using process.exit ...
  await Runtime.evaluate({expression: 'process.exit(0)'})
  // ... let node finish.
  await connection.close();
})()
